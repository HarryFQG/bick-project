<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.it.project.record.dao.RideRecordMapper" >
  <resultMap id="BaseResultMap" type="com.it.project.record.entity.RideRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="record_no" property="recordNo" jdbcType="VARCHAR" />
    <result column="bike_no" property="bikeNo" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="ride_time" property="rideTime" jdbcType="INTEGER" />
    <result column="ride_cost" property="rideCost" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, record_no, bike_no, start_time, end_time, ride_time, ride_cost, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.it.project.record.entity.RideRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ride_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ride_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ride_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.it.project.record.entity.RideRecordExample" >
    delete from ride_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.it.project.record.entity.RideRecord" >
    insert into ride_record (id, userid, record_no, 
      bike_no, start_time, end_time, 
      ride_time, ride_cost, status
      )
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{recordNo,jdbcType=VARCHAR}, 
      #{bikeNo,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{rideTime,jdbcType=INTEGER}, #{rideCost,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.it.project.record.entity.RideRecord" >
    insert into ride_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="recordNo != null" >
        record_no,
      </if>
      <if test="bikeNo != null" >
        bike_no,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="rideTime != null" >
        ride_time,
      </if>
      <if test="rideCost != null" >
        ride_cost,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="recordNo != null" >
        #{recordNo,jdbcType=VARCHAR},
      </if>
      <if test="bikeNo != null" >
        #{bikeNo,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rideTime != null" >
        #{rideTime,jdbcType=INTEGER},
      </if>
      <if test="rideCost != null" >
        #{rideCost,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.it.project.record.entity.RideRecordExample" resultType="java.lang.Integer" >
    select count(*) from ride_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ride_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.recordNo != null" >
        record_no = #{record.recordNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bikeNo != null" >
        bike_no = #{record.bikeNo,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rideTime != null" >
        ride_time = #{record.rideTime,jdbcType=INTEGER},
      </if>
      <if test="record.rideCost != null" >
        ride_cost = #{record.rideCost,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ride_record
    set id = #{record.id,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      record_no = #{record.recordNo,jdbcType=VARCHAR},
      bike_no = #{record.bikeNo,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      ride_time = #{record.rideTime,jdbcType=INTEGER},
      ride_cost = #{record.rideCost,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.it.project.record.entity.RideRecord" >
    update ride_record
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="recordNo != null" >
        record_no = #{recordNo,jdbcType=VARCHAR},
      </if>
      <if test="bikeNo != null" >
        bike_no = #{bikeNo,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rideTime != null" >
        ride_time = #{rideTime,jdbcType=INTEGER},
      </if>
      <if test="rideCost != null" >
        ride_cost = #{rideCost,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.it.project.record.entity.RideRecord" >
    update ride_record
    set userid = #{userid,jdbcType=BIGINT},
      record_no = #{recordNo,jdbcType=VARCHAR},
      bike_no = #{bikeNo,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      ride_time = #{rideTime,jdbcType=INTEGER},
      ride_cost = #{rideCost,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectRecordNotClosed" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT
    <include refid="Base_Column_List"/>
    FROM  ride_record
    WHERE userid = #{userId} and status =1
  </select>
  <select id="selectBikeRecordOnGoing" resultMap="BaseResultMap" parameterType="long">
    SELECT
    <include refid="Base_Column_List"/>
    FROM  ride_record
    WHERE bike_no = #{bickNumber} and status =1

  </select>
  <select id="selectRideRecordPage" resultMap="BaseResultMap" >
    SELECT
    <include refid="Base_Column_List"/>
    FROM ride_record
    WHERE userid = #{userId} and id>#{lastId} and status=2
    limit 10

  </select>


</mapper>